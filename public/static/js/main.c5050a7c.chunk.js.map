{"version":3,"sources":["Homepage.js","useFetch.js","CustTable.js","Customers.js","Popup.js","Transaction.js","CustTable1.js","Customer.js","NavBar.js","AllTransac.js","ViewTran.js","Transactionhistory.js","History.js","Heading.js","App.js","NewTegomin-Regular.ttf","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","image","height","backgroundImage","backgroundRepeat","backgroundColor","type","grey","backgroundSize","backgroundPosition","heading","a","marginTop","border","borderRadius","txt","textDecoration","Homepage","classes","className","url","Grid","container","component","item","xs","Typography","variant","style","fontFamily","fontSize","Button","size","to","useFetch","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","console","log","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort","StyledTableCell","withStyles","head","common","black","white","body","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","button","marginLeft","img","width","marginRight","paddingRight","img1","CustTable","cust","cusid","axios","post","response","window","location","handleSubmit","value","handleSubmit1","TableContainer","Paper","align","Table","aria-label","TableHead","TableBody","map","row","scope","src","alt","acnumber","fname","ltname","atype","astatus","Email","fontWeight","opening_balance","endIcon","onClick","custid","Customers","Popup","React","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","q","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","id","m","DialogContent","DialogContentText","g","DialogActions","autoFocus","margin","formControl","b","txt1","Transaction","accountno","setaccountno","amount","setamount","pop1","setpop1","c","setinvalid","pathname","split","l","setpopuphead","history","marginBottom","FormControl","InputLabel","Select","labelId","onChange","event","target","MenuItem","e","placeholder","preventDefault","button1","CustTable1","trans","settrans","setbutton","setbutton1","paddingTop","menuButton","menuButton1","nav","lg","NavBar","AppBar","position","Toolbar","IconButton","edge","Tooltip","title","AllTransac","frm_acc_no","to_acc_no","tran_status","lg1","ViewTran","Transactionhistory","path","History","Heading","App","d","exact","Customer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5050a7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nimport ReactFontLoader from 'react-font-loader';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    image:{\r\n        height:'100vh',\r\n        backgroundImage: 'url(bground.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    },\r\n \r\n    heading:{\r\n        backgroundColor:'grey',\r\n    },\r\n    a:{\r\n    marginTop:'8%',\r\n    border: \"3px solid black\",\r\n    borderRadius:\"10px\"\r\n    },\r\n    txt:{\r\n        textDecoration:'none',\r\n        color:'black',\r\n    }\r\n  }));\r\n\r\n  \r\n  \r\nconst Homepage = () => {\r\n    const classes = useStyles();\r\n\r\n    return (  \r\n\r\n        <div className={classes.root}className={classes.image}>\r\n            <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Zilla+Slab:wght@500&display=swap' />\r\n      <Grid  container component=\"main\" >\r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        <Grid item xs={6} >\r\n        <div>\r\n        <Typography variant=\"h1\" component=\"h2\" style={{fontFamily:'Zilla Slab',fontSize:\"110px\"}}>BANKING SYSYTEM</Typography>\r\n        </div>\r\n        <Button variant=\"outlined\" size=\"large\"color=\"black\" className={classes.a}>\r\n        <Link to=\"/customers\" className={classes.txt}>Click here to proceed</Link>\r\n        \r\n        </Button>\r\n        </Grid>\r\n        \r\n        </Grid>\r\n        \r\n\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default Homepage;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      console.log(url)\r\n      fetch(url, { signal: abortCont.signal })\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if (err.name === 'AbortError') {\r\n          console.log('fetch aborted')\r\n        } else {\r\n          // auto catches network / connection error\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      })\r\n    }, 1000);\r\n\r\n    // abort the fetch\r\n    return () => abortCont.abort();\r\n  }, [url])\r\n\r\n  return { data, isPending, error };\r\n}\r\n \r\nexport default useFetch;","\r\n\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ReactFontLoader from 'react-font-loader';\r\n\r\nimport axios from \"axios\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  button: {\r\n    marginLeft:'2%',\r\n    borderRadius:\"0px 20px 20px 0px\",\r\n    backgroundColor:'black',\r\n  },\r\n  img:{\r\n    width:'100%',\r\n    height:'130px',\r\nmarginLeft:\"2%\",\r\nmarginRight:\"0%\",\r\npaddingRight:\"0px\",\r\n  },\r\n  img1:{\r\n    width:'10%',\r\n\r\n\r\n  }\r\n});\r\n\r\nconst CustTable = ({cust}) => {\r\n    const classes = useStyles();\r\n  \r\n    async function handleSubmit1(cusid){\r\n        console.log(cusid)\r\n        axios.post('/view', {\r\n            cusid\r\n          })\r\n          .then(function (response) {\r\n            console.log(response.data);\r\n            if(response.data===\"User Not Foundd!!\"){\r\n                console.log(\"bye\");\r\n\r\n            }\r\n            if(response.data===\"Success\"){\r\n                window.location=\"/transaction/\"+cusid;\r\n\r\n            }\r\n          })\r\n          \r\n    }\r\n    \r\n    const handleSubmit=(value)=>{\r\n        console.log(value)\r\n        console.log(\"hi\")\r\n        \r\n     \r\n        const a={value};\r\n        console.log(a)\r\n        \r\n        handleSubmit1(value)\r\n        \r\n\r\n    }\r\n\r\n    return ( \r\n      \r\n      <div style={{backgroundColor:\"#FAE2E2\"}}>        \r\n        <TableContainer component={Paper}style={{width:\"80%\" ,align:\"center\",marginLeft:\"auto\",marginRight:\"auto\",border:\"5px solid black\"}}>\r\n       <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Zilla+Slab:wght@500&display=swap' />\r\n\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}>Customer Image</StyledTableCell>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}>Account Number</StyledTableCell>\r\n\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}> First Name</StyledTableCell>\r\n         \r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}> Last Name</StyledTableCell>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}>Account type</StyledTableCell>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}>Account Status</StyledTableCell>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}>Email</StyledTableCell>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}>Amount</StyledTableCell>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"15px\"}}>For Transaction and other details</StyledTableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {cust.map((row) => (\r\n            \r\n              <StyledTableRow key={row.custid}   >\r\n                  \r\n                <StyledTableCell component=\"th\" scope=\"row\" align=\"left\"className={classes.img1}>\r\n                  <img src={row.image+\".jpg\"} className={classes.img} alt=\"Customer \"></img>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>\r\n                {row.acnumber}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>{row.fname}</StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>{row.ltname}</StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>{row.atype}</StyledTableCell>\r\n                \r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>{row.astatus}</StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>{row.Email}</StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\",color:'green',fontWeight:\"bold\"}}>{row.opening_balance}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                    \r\n                    <form >\r\n                \r\n                    <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        \r\n        className={classes.button}\r\n        endIcon={<SendIcon/>}\r\n        onClick={()=>handleSubmit(row.custid)}\r\n      >\r\n        Proceed\r\n      \r\n      </Button>\r\n                \r\n                </form>\r\n                </StyledTableCell>\r\n                \r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </div>\r\n     );\r\n}\r\n \r\nexport default CustTable;","import useFetch from \"./useFetch\";\r\n// import Summa from \"./Summa\";\r\nimport CustTable from \"./CustTable\";\r\nconst Customers = () => {\r\n    const { error, isPending, data: cust } = useFetch('/api/custdetails')\r\n    console.log(cust)\r\n    return (  \r\n        <div>\r\n            { error && <div>{ error }</div> }\r\n      { isPending && <div>Loading...</div> }    \r\n            { cust && <CustTable cust={cust} /> }\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Customers\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst Popup=(a) => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  console.log(a.q)\r\n  const handleClose = () => {\r\n    \r\n \r\n    window.location=a.q;\r\n    setOpen(false);\r\n};\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{a.m}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {a.g}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          \r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n        OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default Popup;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport useFetch from \"./useFetch\";\r\nimport Popup from \"./Popup\";\r\nimport { Typography } from '@material-ui/core';\r\nimport ReactFontLoader from 'react-font-loader';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginLeft:'2%',\r\n    backgroundColor:'red',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"120px\",\r\n\r\n  },\r\n  b:{\r\n    marginTop:\"2%\",\r\n  },\r\n  txt:{\r\n    marginTop:\"1.25%\",\r\n    width:'220px',\r\n    height:'30px',\r\n  },\r\n  txt1:{\r\n    textDecoration:'none',\r\n    color:'white',\r\n}\r\n}));\r\n\r\nconst Transaction = () => {\r\n  const classes = useStyles();\r\n\r\n    const [accountno,setaccountno]=useState('')\r\n    const [amount,setamount]=useState('')\r\n    const [pop1, setpop1] = useState(false);\r\n    const [c,setinvalid]=useState(\"AMOUNT IS INSUFFICIENT OR INCORRECT ACCOUNT NUMBER\")\r\n    var b=window.location.pathname.split(\"/\")[2];\r\n    // const[k,setpath]=useState(\"/transaction/\"+b)\r\n    // const[history,sethistory]=useState(\"/transaction/history/\"+b)\r\n    const[l,setpopuphead]=useState(\"\")\r\n    // const [age, setAge] = React.useState('');\r\n    const {data: id } = useFetch('/selection/'+b)\r\n    console.log(id)\r\n    var history=\"/history/\"+b\r\n    async function handleSubmit1(accountno,amount,b){\r\n        axios.post('/trans ', {\r\n            accountno,amount,b\r\n          })\r\n          .then(function (response) {\r\n            console.log(response.data);\r\n            if(response.data===\"INVALID ACCOUNT NO\"){\r\n                setpopuphead(\"INVALID CREDENTIALS\")\r\n                setinvalid(\"INVALID ACCOUNT NO\")\r\n                setpop1(true)\r\n                console.log(\"bye\");\r\n\r\n            }\r\n            if(response.data===\"FUNDS INSUFFICIENT\"){\r\n              setpopuphead(\"INVALID CREDENTIALS\")\r\n\r\n              setinvalid(\"FUNDS INSUFFICIENT\")\r\n              setpop1(true)\r\n              console.log(\"bye\");\r\n\r\n          }\r\n            if(response.data===\"SUCCESS\"){\r\n              setpopuphead(\"SUCCESSFULL\")\r\n              setinvalid(\"AMOUNT TRANSFERED\")\r\n              setpop1(true)\r\n                console.log(\"wqe\")\r\n                // window.location=\"/transaction/\"+cusid1;\r\n\r\n            }\r\n          })\r\n          \r\n    }\r\n    \r\n    const handleSubmit=(e)=>{\r\n        console.log(\"hi\")\r\n        console.log(accountno)\r\n        console.log(amount)\r\n        console.log(b)\r\n        // const blog = { row.custid };\r\n        e.preventDefault();\r\n        const a={accountno,amount,b};\r\n        console.log(a)\r\n        \r\n        handleSubmit1(accountno,amount,b)\r\n        \r\n\r\n    }\r\n    \r\n    const handleChange = (event) => {\r\n      setaccountno(event.target.value);\r\n    };\r\n  \r\n    return ( \r\n        <div>\r\n            { pop1 && <Popup g={c} q={history} m={l}/>}\r\n      <div className={classes.b} >\r\n      <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Zilla+Slab:wght@500&display=swap' />\r\n\r\n        <Typography variant=\"h3\" style={{fontFamily:'Zilla Slab'}}>Transaction</Typography>\r\n        \r\n            <form >\r\n            <div style={{marginBottom:'2%'}}>\r\n            <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\" >Account no</InputLabel>\r\n        {id && <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={accountno}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={id[0].acnumber}>{id[0].acnumber}</MenuItem>\r\n          <MenuItem value={id[1].acnumber}>{id[1].acnumber}</MenuItem>\r\n          <MenuItem value={id[2].acnumber}>{id[2].acnumber}</MenuItem>\r\n          <MenuItem value={id[3].acnumber}>{id[3].acnumber}</MenuItem>\r\n          <MenuItem value={id[4].acnumber}>{id[4].acnumber}</MenuItem>\r\n          <MenuItem value={id[5].acnumber}>{id[5].acnumber}</MenuItem>\r\n          <MenuItem value={id[6].acnumber}>{id[6].acnumber}</MenuItem>\r\n          <MenuItem value={id[7].acnumber}>{id[7].acnumber}</MenuItem>\r\n          <MenuItem value={id[8].acnumber}>{id[8].acnumber}</MenuItem>\r\n\r\n        </Select>}\r\n      </FormControl>\r\n            <input type=\"text\" onChange={(e) => setamount(e.target.value)} className={classes.txt} placeholder=\"Enter Amount\"></input>\r\n            </div>\r\n            <div>  \r\n            <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        \r\n        className={classes.button}\r\n        endIcon={<SendIcon/>}\r\n        onClick={handleSubmit}>SEND\r\n     \r\n        \r\n      \r\n      </Button>\r\n      </div>\r\n      <div>\r\n     \r\n      </div> \r\n            </form>\r\n       </div>\r\n       </div>      \r\n            \r\n     );\r\n}\r\n \r\nexport default Transaction;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from \"react\";\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport ReactFontLoader from 'react-font-loader';\r\nimport Transaction from './Transaction';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport { Link } from 'react-router-dom';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\n// const StyledTableCell = withStyles((theme) => ({\r\n//   head: {\r\n//     backgroundColor: theme.palette.common.black,\r\n//     color: theme.palette.common.white,\r\n//   },\r\n//   body: {\r\n//     fontSize: 14,\r\n//     backgroundColor:\"#FAE2E2\",\r\n//   },\r\n// }))(TableCell);\r\n\r\n// const StyledTableRow = withStyles((theme) => ({\r\n//   root: {\r\n//     '&:nth-of-type(odd)': {\r\n//       backgroundColor: theme.palette.action.hover,\r\n//     },\r\n//   },\r\n// }))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  button: {\r\n    // margin: theme.spacing(1),\r\n    marginTop:'2%',\r\n    marginBottom:'0.5%',\r\n    backgroundColor:'red',\r\n  },\r\n  button1:{\r\n    marginTop:'2%',\r\n    backgroundColor:'red',\r\n    marginBottom:'2%',\r\n  },\r\n  txt1:{\r\n    textDecoration:'none',\r\n    color:'white',\r\n    \r\n},\r\nimg:{\r\n  marginTop:\"2%\",\r\n  border:\"5px solid black\",\r\n  \r\n},\r\n});\r\n\r\nconst CustTable1 = ({cust}) => {\r\n    const classes = useStyles();\r\n    // const [cusid,setcusid]=useState('')\r\n    // const [pass, setpass] = useState('');\r\n    const [trans,settrans]=useState(false)\r\n    const [button,setbutton]=useState(true)\r\n    const [button1,setbutton1]=useState(true)\r\n    var b=window.location.pathname.split(\"/\")[2];\r\n\r\n    var history=\"/history/\"+b\r\n    console.log(cust[0].image)\r\n    const handleSubmit=()=>{\r\n      setbutton(false)\r\n      setbutton1(false)\r\n      settrans(true)\r\n    }\r\n    \r\n    return ( \r\n      <div  style={{backgroundColor:\"#FAE2E2\",height:'100%'}}>\r\n        \r\n        <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Zilla+Slab:wght@500&display=swap' />\r\n        <img src={\"/\"+cust[0].image+\".jpg\"} className={classes.img} width=\"300\" height=\"350\" alt=\"Customer\"></img>\r\n        <Typography variant=\"h4\" style={{fontFamily:'Zilla Slab',paddingTop:\"2%\"}}>Name : {cust[0].fname+' '+cust[0].ltname}</Typography>\r\n        <Typography variant=\"h4\" style={{fontFamily:'Zilla Slab'}}>Account no: {cust[0].acnumber}</Typography>\r\n        <Typography variant=\"h4\" style={{fontFamily:'Zilla Slab'}}>Email: {cust[0].Email}</Typography>\r\n        <Typography variant=\"h4\" style={{fontFamily:'Zilla Slab'}}>Account type: {cust[0].atype}</Typography>\r\n        <Typography variant=\"h4\" style={{fontFamily:'Zilla Slab',color:\"red\"}}>Balance: {cust[0].opening_balance}</Typography>\r\n        {button && <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleSubmit}\r\n        className={classes.button}\r\n        endIcon={<PaymentIcon/>}\r\n        \r\n      >\r\n        Click here for transaction\r\n      \r\n      </Button>}\r\n      <div>\r\n      {button1 && <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        \r\n        className={classes.button1}\r\n        endIcon={<HistoryIcon/>}\r\n        \r\n      ><Link to={history} className={classes.txt1}>\r\n        Transaction history</Link>\r\n      \r\n      </Button>}\r\n      </div>\r\n        {trans && <Transaction/>}\r\n\r\n      </div>\r\n    \r\n    \r\n      \r\n     );\r\n}\r\n \r\nexport default CustTable1;","import useFetch from \"./useFetch\";\r\n// import Summa from \"./Summa\";\r\nimport CustTable1 from \"./CustTable1\";\r\nconst Customers = () => {\r\n    var b=window.location.pathname.split(\"/\")[2];\r\n    const { error, isPending, data: cust } = useFetch('/view/'+b)\r\n    console.log(cust)\r\n    return (  \r\n        <div>\r\n            { error && <div>{ error }</div> }\r\n      { isPending && <div>Loading...</div> }    \r\n            { cust && <CustTable1 cust={cust} /> }\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Customers\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport { Link } from 'react-router-dom';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuButton1: {\r\n    marginLeft: \"72%\",\r\n  },\r\n \r\n  nav:{\r\n      backgroundColor:'#696868',\r\n  },\r\n  lg:{\r\n    color:\"white\",\r\n  }\r\n}));\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n\r\n    return ( \r\n        <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.nav}>\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <Link to=\"/\" style={{color:\"white\"}}><AccountBalanceIcon /></Link>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" style={{width:\"270px\"}}>\r\n            Spark Banking System\r\n          </Typography>\r\n          <Tooltip title=\"Customers\">\r\n          <IconButton className={classes.menuButton1} color=\"inherit\" aria-label=\"menu\">\r\n            <Link to=\"/customers\" className={classes.lg}><PeopleAltIcon /></Link>\r\n            \r\n          </IconButton>\r\n          </Tooltip>\r\n          {/* <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n            <Link to=\"/transaction\" className={classes.lg}><AccountBalanceWalletIcon/></Link>\r\n            \r\n          </IconButton> */}\r\n          <Tooltip title=\"All transactions\">\r\n          <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n            <Link to=\"/alltransaction\" className={classes.lg}><ReceiptIcon /></Link>\r\n            \r\n          </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default NavBar;","\r\n\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport ReactFontLoader from 'react-font-loader';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  button: {\r\n    // margin: theme.spacing(1),\r\n    marginLeft:'2%',\r\n    \r\n    backgroundColor:'black',\r\n  },\r\n\r\n});\r\n\r\nconst AllTransac = ({cust}) => {\r\n    const classes = useStyles();\r\n    console.log(cust)\r\n    return ( \r\n      \r\n        <div style={{backgroundColor:\"#FAE2E2\"}}>\r\n        <TableContainer component={Paper} style={{width:\"80%\" ,align:\"center\",marginLeft:\"auto\",marginRight:\"auto\",border:\"5px solid black\"}}>\r\n                <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Zilla+Slab:wght@500&display=swap' />\r\n\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}> From Account Number</StyledTableCell>\r\n\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}> To Account Number</StyledTableCell>\r\n         \r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}> Amount Transferred</StyledTableCell>\r\n              <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}> Transaction Status</StyledTableCell>\r\n\r\n              \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {cust.map((row) => (\r\n            // console.log(row.custid),\r\n            \r\n              <StyledTableRow   >\r\n                  \r\n                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>\r\n                  {row.frm_acc_no}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>{row.to_acc_no}</StyledTableCell>\r\n                <StyledTableCell align=\"center\"style={{fontFamily:'Zilla Slab',fontSize:\"20px\"}}>{row.amount}</StyledTableCell>\r\n                { row.tran_status ===\"SUCCESS\"? <StyledTableCell align=\"center\" style={{fontFamily:'Zilla Slab',fontSize:\"20px\",color:\"green\",fontFamily:'Zilla Slab',fontWeight:\"bold\",fontSize:\"17px\"}}>{row.tran_status}</StyledTableCell>:<StyledTableCell align=\"center\" style={{color:\"red\",fontFamily:'Zilla Slab',fontWeight:\"bold\",fontSize:\"17px\"}}>{row.tran_status}</StyledTableCell>}\r\n                \r\n                \r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <div style={{marginLeft:\"75%\"}}>\r\n        <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n            <Link to=\"/newestfirst\" className={classes.lg1}><ImportExportIcon /></Link>\r\n            \r\n          </IconButton>\r\n\r\n          <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n            <Link to=\"/success\" className={classes.lg}><DoneOutlineIcon /></Link>\r\n            \r\n          </IconButton>\r\n          <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n            <Link to=\"/failure\" className={classes.lg}><ClearIcon /></Link>\r\n            \r\n          </IconButton>\r\n        \r\n        </div>\r\n      </TableContainer>\r\n      </div>\r\n     );\r\n}\r\n \r\nexport default AllTransac;","import AllTransac from \"./AllTransac\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst ViewTran = ({a}) => {\r\n    \r\n    const { error, isPending, data:cust } = useFetch('/'+a)\r\n    console.log(cust)\r\n    return (  \r\n        <div>\r\n            { error && <div>{ error }</div> }\r\n      { isPending && <div>Loading...</div> }    \r\n            { cust && <AllTransac cust={cust} /> }\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ViewTran\r\n","\r\n\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n  \r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginLeft:'2%',\r\n    backgroundColor:'red',\r\n  },\r\n  txt1:{\r\n    textDecoration:'none',\r\n    color:'white',\r\n}\r\n}));\r\n\r\nconst Transactionhistory = ({cust}) => {\r\n    const classes = useStyles();\r\n    // const [cusid,setcusid]=useState('')\r\n    // const [pass, setpass] = useState('');\r\n    var b=window.location.pathname.split(\"/\")[2];\r\n    var path=\"/transaction/\"+b\r\n    \r\n    \r\n  \r\n\r\n    return ( \r\n      <div style={{backgroundColor:\"#FAE2E2\"}}>        \r\n\r\n        <TableContainer component={Paper}style={{width:\"80%\" ,align:\"center\",marginLeft:\"auto\",marginRight:\"auto\",border:\"5px solid black\"}}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              \r\n\r\n              <StyledTableCell align=\"center\">Account number</StyledTableCell>\r\n         \r\n              <StyledTableCell align=\"center\">Amount</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n              \r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {cust.map((row) => (\r\n            \r\n            \r\n              <StyledTableRow key={row.frm_acc_no}   >\r\n                  \r\n                \r\n                <StyledTableCell align=\"center\">{row.to_acc_no}</StyledTableCell>\r\n                <StyledTableCell align=\"center\">{row.amount}</StyledTableCell>\r\n                { row.tran_status ===\"SUCCESS\"? <StyledTableCell align=\"center\" style={{color:\"green\",fontFamily:'Zilla Slab',fontWeight:\"bold\",fontSize:\"17px\"}}>{row.tran_status}</StyledTableCell>:<StyledTableCell align=\"center\" style={{color:\"red\",fontFamily:'Zilla Slab',fontWeight:\"bold\",fontSize:\"17px\"}}>{row.tran_status}</StyledTableCell>}\r\n                                \r\n                \r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div>\r\n        \r\n        <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        \r\n        className={classes.button}\r\n        endIcon={<SendIcon/>}\r\n        \r\n      ><Link to={path} className={classes.txt1}>\r\n        GO back</Link>\r\n      \r\n      </Button>     \r\n        </div>\r\n      </TableContainer>\r\n      </div>\r\n     );\r\n     \r\n}\r\n \r\nexport default Transactionhistory;","import Transactionhistory from \"./Transactionhistory\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst History = () => {\r\n    var b=window.location.pathname.split(\"/\")[2];\r\n    const { error, isPending, data: history } = useFetch('/history/'+b)\r\n    console.log(history)\r\n    return (  \r\n        <div>\r\n            { error && <div>{ error }</div> }\r\n      { isPending && <div>Loading...</div> }    \r\n            { history && <Transactionhistory cust={history} /> }\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default History\r\n","import { Typography } from \"@material-ui/core\"\r\nimport ReactFontLoader from 'react-font-loader';\r\n\r\nconst Heading = (e) => {\r\n    return (  \r\n        \r\n        <div>\r\n            <ReactFontLoader url='https://fonts.googleapis.com/css2?family=Zilla+Slab:wght@500&display=swap' />\r\n\r\n            <Typography variant=\"h3\" style={{fontFamily:'Zilla Slab',backgroundColor:'#FF7979'}}>{e.a}</Typography>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Heading;","import './App.css';\nimport Homepage from './Homepage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Customers from './Customers';\nimport Customer from './Customer';\n\nimport NavBar from './NavBar';\n\nimport ViewTran from './ViewTran';\nimport History from './History';\nimport { useState } from \"react\";\nimport Heading from './Heading';\n\nfunction App() {\n  // const [heading,setheading]=useState(\"ALL CUSTOMERS\")\n  const [a,seta]=useState(\"alltrans\")\n  const [b,setb]=useState(\"newesttrans\")\n  const [c,setc]=useState(\"success\")\n  const [d,setd]=useState(\"failure\")\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n          <Homepage/>\n\n          </Route>\n          <Route path='/customers'>\n            <NavBar/>\n            <Heading a=\"ALL CUSTOMERS\"/>\n          <Customers/>\n\n          </Route>\n          \n          <Route path='/transaction/:id'>\n            <NavBar/>\n            <Heading a=\"CUSTOMER DETAILS\"/>\n            <Customer/>\n           \n          </Route>\n          <Route path='/history/:id'>\n            <NavBar/>\n            <History/>\n            \n          </Route>\n          <Route path='/alltransaction'>\n            <NavBar/>\n            <Heading a=\"ALL TRANSACTION\"/>\n            <ViewTran a={a}/>\n            \n          </Route>\n          <Route path='/newestfirst'>\n            <NavBar/>\n            <Heading a=\"ALL TRANSACTION\"/>\n            <ViewTran a={b}/>\n            \n          </Route>\n          <Route path='/success'>\n            <NavBar/>\n            <Heading a=\"SUCCESS TRANSACTION\"/>\n            <ViewTran a={c}/>\n            \n          </Route>\n          <Route path='/failure'>\n            <NavBar/>\n            <Heading a=\"FAILED TRANSACTION\"/>\n            <ViewTran a={d}/>\n            \n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    \n\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/NewTegomin-Regular.ae8c4d94.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './NewTegomin-Regular.ttf'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}